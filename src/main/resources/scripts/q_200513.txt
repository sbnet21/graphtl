connect 127.0.0.1 5518;
create graph t;
use t;

# graph schema
create node A;
create node B;
create node C;
create node D;
create node F;

create node S;
create node T;

create edge X (A -> B);
create edge X (B -> C);
create edge X (B -> D);
create edge X (A -> F);
create edge X (E -> B);

create edge X (B -> S);
create edge X (T -> F);

create node A1;
create node B1;
create node C1;
create node D1;
create node F1;

create node S1;
create node T1;

create edge X (A1 -> B1);
create edge X (B1 -> C1);
create edge X (B1 -> D1);
create edge X (A1 -> F1);
create edge X (E1 -> B1);

create edge X (B1 -> S1);
create edge X (T1 -> F1);


insert N (1,"A");
insert N (1,"A");
#insert N (2,"B");
#insert N (3,"C");
#insert N (4,"D");
#insert E (101,1,2,"X");
#insert E (102,2,3,"X");
#insert E (103,2,4,"X");

#insert N (11,"A");
#insert N (12,"F");
#insert N (13,"B");
insert E (111,11,12,"X");
#insert E (112,12,13,"X");


#insert N (21,"A1");
#insert N (22,"B1");
#insert N (23,"C1");
#insert N (24,"D1");
#insert E (201,21,22,"X");
#insert E (202,22,23,"X");
#insert E (203,22,24,"X");

#insert N (31,"A1");
#insert N (32,"F1");
#insert N (33,"B1");
#insert E (211,31,32,"X");
#insert E (212,32,33,"X");

#import N from "/home/sbnet21/src/workspace/graph-trans/script_gen_n.csv";
#import E from "/home/sbnet21/src/workspace/graph-trans/script_gen_e.csv";

#import N from "/Users/sbnet21/src/workspace/graph-trans/data/gen_n.csv";
#import E from "/Users/sbnet21/src/workspace/graph-trans/data/gen_e.csv";

# graph constraints
add constraint N(a,"A"),N(b1,l1),N(b2,l2),E(e1,a,b1,"X"),E(e2,a,b2,"X") -> l1=l2, e1=e2;
#add constraint N(a,"F"),N(b1,l1),N(b2,l2),E(e1,a,b1,"X"),E(e2,a,b2,"X") -> l1=l2, e1=e2;
#add constraint N(a,"D"),N(b1,l1),N(b2,l2),E(e1,a,b1,"X"),E(e2,a,b2,"X") -> l1=l2, e1=e2;

add constraint N(a,"A1"),N(b1,l1),N(b2,l2),E(e1,a,b1,"X"),E(e2,a,b2,"X") -> l1=l2, e1=e2;
#add constraint N(a,"F1"),N(b1,l1),N(b2,l2),E(e1,a,b1,"X"),E(e2,a,b2,"X") -> l1=l2, e1=e2;
#add constraint N(a,"D1"),N(b1,l1),N(b2,l2),E(e1,a,b1,"X"),E(e2,a,b2,"X") -> l1=l2, e1=e2;





#create view v1qv as #
#	{match a:A-x1:X->b:B, b-x2:X->c:C, b-x3:X->d:D map (c,d) to x:S},
#	{match a:A-x1:X->b:B, b-x2:X->c:C, b-x3:X->d:D map (c,d) to x:S}
#;

#create view v0v as 
#	{match a:A-x1:X->b:B, b-x2:X->c:C, b-x3:X->d:D map (c,d) to x:S}
#;
#create view v1v on v0v as
#	{match s:A-x1:X->t:E, t-x2:X->u:B map (s,t) to y:T}
#;


## parallel 
import N from "/home/sbnet21/src/workspace/graph-trans/script_gen_n2.csv";
import E from "/home/sbnet21/src/workspace/graph-trans/script_gen_e2.csv";

# hybrid
# materialized
create materialized view v1 as
	{match a:A0-x1:X0->b:B0, b-x2:X0->c:C0, b-x3:X0->d:D0 map (c,d) to x:S0},
	{match s:A0-x1:X0->t:F0, t-x2:X0->u:B0 map (s,t) to y:T0}
;

import N from "/home/sbnet21/src/workspace/graph-trans/script_gen_n.csv";
import E from "/home/sbnet21/src/workspace/graph-trans/script_gen_e.csv";

#insert E (22222201,22222221,2222222,"X");

#import N from "/home/sbnet21/src/workspace/graph-trans/script_gen_n1.csv";
#import E from "/home/sbnet21/src/workspace/graph-trans/script_gen_e1.csv";

#import E from "/home/sbnet21/src/workspace/graph-trans/script_gen_e2.csv";
#import N from "/home/sbnet21/src/workspace/graph-trans/script_gen_n2.csv";


#insert E (22222201,22222221,2222222,"X");

#insert E (22222201,22222221,2222222,"X");

#insert E (22222201,22222221,2222222,"X");


#	{match a:A1-x1:X->b:B1, b-x2:X->c:C1, b-x3:X->d:D1 map (c,d) to x:S1},
#	{match s:A1-x1:X->t:F1, t-x2:X->u:B1 map (s,t) to y:T1}

#create materialized view v2 on v1 as
#;
#create materialized view v3 on v2 as
#;


#	{match a:A1-x1:X->b:B1, b-x2:X->c:C1, b-x3:X->d:D map (c,d) to x:S1},
#	{match s:A1-x1:X->t:F1, t-x2:X->u:B1 map (s,t) to y:T1}


## sequential
#create materialized view v0v as
#	{match a:A-x1:X->b:B, b-x2:X->c:C, b-x3:X->d:D map (c,d) to x:S}
#;
#create materialized view v1v on v0v as
#	{match s:A-x1:X->t:E, t-x2:X->u:B map (s,t) to y:T}
#;

program;
#match a:S from v0 where a.id=1 return a;
#match a:T from v0 where a.id=20000001 return a;

match a:S0 from v1 where a.id=64246 return a;
#match a:T from v1 where a.id=14255 return a;


#query;
#match a:A-r:X->b:B, b-r2:X->s:S from v1 return a-r->b;
##match a:A-r:X->b:B from v1 return a-r->b;

#schema;
#drop graph t;
